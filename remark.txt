Vue CLI 需要 Node.js 8.9 或更高版本 (推荐 8.11.0+)

npm install -g cnpm --registry=https://registry.npm.taobao.org

npm install -g yarn
---------------------------------------------------------------
npm install	                |     yarn

npm install react --save	  |     yarn add react

npm uninstall react --save  |   	yarn remove react

npm install react --save-dev| 	  yarn add react --dev

npm update --save	          |     yarn upgrade
-------------------------------------------------------------------

- 删除旧版本
npm uninstall vue-cli -g

- 安装
npm install -g @vue/cli

- 验证
vue --version

- 创建项目
vue create project-name

- 安装插件和Preset
vue add @vue/eslint
```
//插件配置.eslintignore 和 .eslintrc.js
module.exports = {
  root: true,
  'extends': [
    'plugin:vue/essential',
    '@vue/standard'
  ],
  rules: {
    // allow async-await
    'generator-star-spacing': 'off',
    // allow debugger during development
    'no-debugger': process.env.NODE_ENV === 'production' ? 'error' : 'off',
    'vue/no-parsing-error': [2, { 'x-invalid-end-tag': false }],
    'no-undef': 'off',
    'camelcase': 'off'
  },
  parserOptions: {
    parser: 'babel-eslint'
  }
}
```
vue add router
vue add vuex

```vue.config.js
const path = require('path')

const resolve = dir => {
  return path.join(__dirname, dir)
}

// 项目部署基础
// 默认情况下，我们假设你的应用将被部署在域的根目录下,
// 例如：https://www.my-app.com/
// 默认：'/'
// 如果您的应用程序部署在子路径中，则需要在这指定子路径
// 例如：https://www.foobar.com/my-app/
// 需要将它改为'/my-app/'
// iview-admin线上演示打包路径： https://file.iviewui.com/admin-dist/
const BASE_URL = process.env.NODE_ENV === 'production'
  ? '/'
  : '/'

module.exports = {
  // Project deployment base
  // By default we assume your app will be deployed at the root of a domain,
  // e.g. https://www.my-app.com/
  // If your app is deployed at a sub-path, you will need to specify that
  // sub-path here. For example, if your app is deployed at
  // https://www.foobar.com/my-app/
  // then change this to '/my-app/'
  baseUrl: BASE_URL,
  // tweak internal webpack configuration.
  // see https://github.com/vuejs/vue-cli/blob/dev/docs/webpack.md
  // 如果你不需要使用eslint，把lintOnSave设为false即可
  lintOnSave: true,
  chainWebpack: config => {
    config.resolve.alias
      .set('@', resolve('src')) // key,value自行定义，比如.set('@@', resolve('src/components'))
      .set('_c', resolve('src/components'))
  },
  // 打包时不生成.map文件
  productionSourceMap: false,

  devServer: {
    port: 8089
    // proxy: 'localhost:3000'// 这里写你调用接口的基础路径，来解决跨域，如果设置了代理，那你本地开发环境的axios的baseUrl要写为 '' ，即空字符串
  }
}

```



vscode-setting

```
{
    "python.linting.enabled": false,
    "files.autoSave": "off",
    "editor.renderWhitespace": "all",
    "editor.renderControlCharacters": false,
    "breadcrumbs.enabled": true,
    "editor.tabSize": 2,
    "files.associations": {
        "*.vue": "vue"
    },
    "eslint.autoFixOnSave": true,
    "eslint.options": {
        "extensions": [
            ".js",
            ".vue"
        ]
    },
    "eslint.validate": [
        "javascript", {
            "language": "vue",
            "autoFix": true
        }, "html",
        "vue"
    ],
    "search.exclude": {
        "**/node_modules": true,
        "**/bower_components": true,
        "**/dist": true
    },
    "emmet.syntaxProfiles": {
        "javascript": "jsx",
        "vue": "html",
        "vue-html": "html"
    },
    "javascript.updateImportsOnFileMove.enabled": "always",
}
```

